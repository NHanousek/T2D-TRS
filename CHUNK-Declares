

!     MODULE CONTROL
      LOGICAL,INTENT(IN) :: TRS_FIRST  !Is this the first call of the module
      LOGICAL,INTENT(IN) :: WRITE_TRS  !Print the TRS data to the file this timestep
      LOGICAL,INTENT(IN) :: G_PRNT_TRS !true => print with graphical printout period
      INTEGER,INTENT(IN) :: NUM_TRS    !How many independant tidal range schemes...
      DOUBLE PRECISION,INTENT(IN)    :: TRS_TIME   !false => print with 'listing period'
!     TEMPORAL CONTROLS - All in hours
      DOUBLE PRECISION,DIMENSION(:),INTENT(IN) :: RAMPTIME      !How long to ramp between modes
      DOUBLE PRECISION,DIMENSION(:),INTENT(IN) :: PREV_SWITCH   !Time when scheme last switched modes
      DOUBLE PRECISION,DIMENSION(:),INTENT(IN) :: MAX_GEN       !Maxmimum time before generation is auto ended
      DOUBLE PRECISION,DIMENSION(:),INTENT(IN) :: MAX_HOLD      !Maxmimum time before holding is auto ended
      DOUBLE PRECISION,DIMENSION(:),INTENT(IN) :: MAX_SLUICE    !Maxmimum time before sluicing is auto ended
      DOUBLE PRECISION,DIMENSION(:),INTENT(IN) :: MAX_PUMP      !Maxmimum time before pumping is auto ended
      DOUBLE PRECISION,DIMENSION(:),INTENT(IN) :: ORIG_DIAM_T   ! (m) Original diameter of Turbines used for the hill charts
!     OPERATION CONFIGURATION
      LOGICAL,DIMENSION(:),INTENT(IN) :: IS2WAY           !Is the scheme in two way operation
      LOGICAL,DIMENSION(:),INTENT(IN) :: ISFLEXIBLE       !Is the scheme in flexible operation
      LOGICAL,DIMENSION(:),INTENT(IN) :: ISPUMPING        !Is the scheme using pumping
      LOGICAL,DIMENSION(:),INTENT(IN) :: PUMPTOLEVEL      !Pump to level or head difference
      INTEGER,DIMENSION(:),INTENT(IN) :: MODE             !What operational mode is the scheme in
      INTEGER,DIMENSION(:),INTENT(IN) :: MODE_PREV        !What mode was the scheme in prevously
!     WATER LEVELS - Meters
      DOUBLE PRECISION,DIMENSION(:),INTENT(IN) :: WL_IN,WL_OUT    !Water levels inside and outside, from control points
      DOUBLE PRECISION,DIMENSION(:),INTENT(IN) :: HEADDIFF        !Head difference = Inside - Outside
      DOUBLE PRECISION,DIMENSION(:),INTENT(IN) :: Q_TURB,Q_SLUICE !Flow rate in m3/s
      DOUBLE PRECISION,DIMENSION(:),INTENT(IN) :: POWER           !Power out(+ve)or in(-ve)
!     HILL CHART PARAMETERS - Note that shared head levels are required for powers/flows
      INTEGER,DIMENSION(:),INTENT(IN)  :: N_HILLS_G,N_HILLS_P     !Number of hill charts for (_G)eneration and (_P)umping
      INTEGER,DIMENSION(:),INTENT(IN)  :: LEN_HILLS_G,LEN_HILLS_P !Length of hillcharts for (_G)eneration and (_P)umping
      DOUBLE PRECISION,DIMENSION(:,:),INTENT(IN)   :: HEAD_G,HEAD_P     !Head levels for the hill charts
      DOUBLE PRECISION,DIMENSION(:,:,:),INTENT(IN) :: POWER_G,FLOW_G  !Power/Flow for Generating
      DOUBLE PRECISION,DIMENSION(:,:,:),INTENT(IN) :: POWER_P,FLOW_P  !Power/Flow for Pumping
      INTEGER,DIMENSION(:),INTENT(IN)  :: PREV_I_POWER_G  !Save the position of the iterator (can lead to large speedups)
      INTEGER,DIMENSION(:),INTENT(IN)  :: PREV_I_FLOW_G
      INTEGER,DIMENSION(:),INTENT(IN)  :: PREV_I_POWER_P !Save the position of the iterator (can lead to large speedups)
      INTEGER,DIMENSION(:),INTENT(IN)  :: PREV_I_FLOW_P
!     FLEXIBLE OPERATION
      INTEGER,DIMENSION(:),INTENT(IN)  :: N_FLEX   !Number of flex periods for each scheme
      DOUBLE PRECISION,DIMENSION(:,:),INTENT(IN)    :: FLX_TIMES  ! Start time of each flex period (no overlap)
      DOUBLE PRECISION,DIMENSION(:,:),INTENT(IN)    :: H_STARTS,H_ENDS ! Start and end piooints in those periods
      DOUBLE PRECISION,DIMENSION(:,:),INTENT(IN)    :: PUMP_TARGS      ! and the _CHARTS indicates the chart to use
      INTEGER,DIMENSION(:,:),INTENT(IN) :: TURB_CHARTS ! turbines (generating)
      INTEGER,DIMENSION(:,:),INTENT(IN) :: PUMP_CHARTS ! and pumping
      INTEGER,DIMENSION(:),INTENT(IN)   :: PREV_I_FLX_TIMES !Save the position of the iterator (can lead to large speedups)
      DOUBLE PRECISION,DIMENSION(:),INTENT(IN) :: H_START, H_END          !Head to start/end generation
      DOUBLE PRECISION,DIMENSION(:),INTENT(IN) :: TURB_CHART, PUMP_CHART  !Which turbine/pump chart to use
      DOUBLE PRECISION,DIMENSION(:),INTENT(IN) :: PUMP_TARG               !Target to pump to
!     DIMENSIONLESS
      DOUBLE PRECISION,DIMENSION(:),INTENT(IN) :: RAMP           !Ramp Coefficient when changing modes
!     BUSE
      INTEGER         , INTENT(IN)    :: NBUSE,NTRAC
      INTEGER         , INTENT(IN)    :: ENTBUS(NBUSE),SORBUS(NBUSE)
      LOGICAL         , INTENT(IN)    :: ENTET
      DOUBLE PRECISION, INTENT(IN)    :: RELAXB,GRAV,DT
      DOUBLE PRECISION, INTENT(INOUT) :: UBUS(2,NBUSE),VBUS(2,NBUSE)
      DOUBLE PRECISION, INTENT(INOUT) :: DBUS(NBUSE),SECBUS(NBUSE)
      TYPE(BIEF_OBJ)  , INTENT(INOUT) :: TBUS
      DOUBLE PRECISION, INTENT(IN)    :: ANGBUS(NBUSE,2),LBUS(NBUSE)
      DOUBLE PRECISION, INTENT(IN)    :: CEBUS(NBUSE,2),CSBUS(NBUSE,2)
      DOUBLE PRECISION, INTENT(IN)    :: ALTBUS(NBUSE,2)
      DOUBLE PRECISION, INTENT(IN)    :: LRGBUS(NBUSE),HAUBUS(NBUSE,2)
      INTEGER         , INTENT(IN)    :: CLPBUS(NBUSE),CIRC(NBUSE)
      DOUBLE PRECISION, INTENT(IN)    :: DELBUS(NBUSE,2)
      DOUBLE PRECISION, INTENT(IN)    :: H(*),ZF(*),U(*),V(*)
      TYPE(BIEF_OBJ)  , INTENT(IN)    :: T
      DOUBLE PRECISION, INTENT(IN)    :: CV(NBUSE),C56(NBUSE)
      DOUBLE PRECISION, INTENT(IN)    :: CV5(NBUSE),C5(NBUSE)
      DOUBLE PRECISION, INTENT(IN)    :: CTRASH(NBUSE),FRICBUS(NBUSE)
      DOUBLE PRECISION, INTENT(IN)    :: LONGBUS(NBUSE)
      INTEGER         , INTENT(IN)    :: OPTBUSE
      TYPE(BIEF_OBJ)  , INTENT(IN)    :: V2DPAR
      INTEGER         , INTENT(IN)    :: MAXSOURCE
      INTEGER, INTENT(IN),OPTIONAL    :: NPTSCE,NPOIN2
      INTEGER, INTENT(IN),OPTIONAL    :: KSCE(MAXSOURCE)
